["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","~:file","cljs/analyzer/api.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",22],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:use-macros",null,"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:imports",null,"~:requires",["^ ","~$cljs.env","^J","~$env","^J","~$cljs.analyzer","^L","~$ana","^L","~$cljs.core","^N","~$goog","^O"],"~:seen",["^>",["~:require"]],"~:shadow/js-access-global",["^>",["Error"]],"~:uses",null,"~:defs",["^ ","^?",["^ ","~:protocol-inline",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",165,"^6",7,"^7",165,"^8",14,"~:arglists",["~#list",["~$quote",["^W",[["~$sym"],["~$state","^Y"]]]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",["^W",[["^Y"],["^Z","^Y"]]],"^V",["^W",[["^Y"],["^Z","^Y"]]],"~:arglists-meta",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/find-ns","^4","cljs/analyzer/api.cljc","^8",14,"^[",["^ ","^10",false,"^11",2,"^12",2,"^13",["^W",[["^Y"],["^Z","^Y"]]],"^V",["^W",[["^Y"],["^Z","^Y"]]],"^14",["^W",[null,null]]],"^13",["^W",[["^Y"],["^Z","^Y"]]],"~:protocol-impl",null,"^11",2,"^14",["^W",[null,null]],"^6",1,"^10",false,"~:methods",[["^ ","^11",1,"^10",false,"~:tag","~$any"],["^ ","^11",2,"^10",false,"^18",["^>",[null,"^19"]]]],"^5",165,"^7",165,"^12",2,"~:fn-var",true,"^V",["^W",[["^Y"],["^Z","^Y"]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^@",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",207,"^6",7,"^7",207,"^8",16,"^V",["^W",["^X",["^W",[["~$ns"],["^Z","^1;"]]]]],"^3","Removes the namespace named by the symbol.","^[",["^ ","^10",false,"^11",2,"^12",2,"^13",["^W",[["^1;"],["^Z","^1;"]]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/remove-ns","^4","cljs/analyzer/api.cljc","^8",16,"^[",["^ ","^10",false,"^11",2,"^12",2,"^13",["^W",[["^1;"],["^Z","^1;"]]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]],"^13",["^W",[["^1;"],["^Z","^1;"]]],"^16",null,"^11",2,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",1,"^10",false,"^18","^19"],["^ ","^11",2,"^10",false,"^18",["^>",[null,"^19"]]]],"^5",207,"^7",207,"^12",2,"^1:",true,"^V",["^W",[["^1;"],["^Z","^1;"]]],"^3","Removes the namespace named by the symbol."],"^A",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",185,"^6",7,"^7",185,"^8",17,"^V",["^W",["^X",["^W",[["^1;"],["^Z","^1;"]]]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^[",["^ ","^10",false,"^11",2,"^12",2,"^13",["^W",[["^1;"],["^Z","^1;"]]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/ns-publics","^4","cljs/analyzer/api.cljc","^8",17,"^[",["^ ","^10",false,"^11",2,"^12",2,"^13",["^W",[["^1;"],["^Z","^1;"]]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]],"^13",["^W",[["^1;"],["^Z","^1;"]]],"^16",null,"^11",2,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",1,"^10",false,"^18","^19"],["^ ","^11",2,"^10",false,"^18",["^>",[null,"~$clj","^19"]]]],"^5",185,"^7",185,"^12",2,"^1:",true,"^V",["^W",[["^1;"],["^Z","^1;"]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",55,"^6",7,"^7",55,"^8",18,"^V",["^W",["^X",["^W",[[],["^Z"]]]]],"^3","Return the compiler options from compiler state.","^[",["^ ","^10",false,"^11",1,"^12",1,"^13",["^W",[[],["^Z"]]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/get-options","^4","cljs/analyzer/api.cljc","^8",18,"^[",["^ ","^10",false,"^11",1,"^12",1,"^13",["^W",[[],["^Z"]]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]],"^13",["^W",[[],["^Z"]]],"^16",null,"^11",1,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",0,"^10",false,"^18","^19"],["^ ","^11",1,"^10",false,"^18",["^>",["^19","~$clj-nil"]]]],"^5",55,"^7",55,"^12",1,"^1:",true,"^V",["^W",[[],["^Z"]]],"^3","Return the compiler options from compiler state."],"~$warning-enabled?",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",43,"^6",7,"^7",43,"^8",23,"^V",["^W",["^X",["^W",[["~$warning-type"]]]]],"^3","Test if the given warning-type is enabled."],"^F","~$cljs.analyzer.api/warning-enabled?","^4","cljs/analyzer/api.cljc","^8",23,"^13",["^W",[["^1C"]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",43,"~:ret-tag","^19","^7",43,"^12",1,"^1:",true,"^V",["^W",["^X",["^W",[["^1C"]]]]],"^3","Test if the given warning-type is enabled."],"^B",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",198,"^6",7,"^7",198,"^8",17,"^V",["^W",["^X",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^[",["^ ","^10",false,"^11",3,"^12",3,"^13",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]],"^V",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/ns-resolve","^4","cljs/analyzer/api.cljc","^8",17,"^[",["^ ","^10",false,"^11",3,"^12",3,"^13",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]],"^V",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]],"^14",["^W",[null,null]]],"^13",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]],"^16",null,"^11",3,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",2,"^10",false,"^18","^19"],["^ ","^11",3,"^10",false,"^18",["^>",[null,"^19"]]]],"^5",198,"^7",198,"^12",3,"^1:",true,"^V",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$empty-state",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",20,"^6",7,"^7",20,"^8",18,"^V",["^W",["^X",["^W",[[]]]]],"^3","Creates an empty compilation state Atom<Map>."],"^F","~$cljs.analyzer.api/empty-state","^4","cljs/analyzer/api.cljc","^8",18,"^13",["^W",[[]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",20,"^1E","^19","^7",20,"^12",0,"^1:",true,"^V",["^W",["^X",["^W",[[]]]]],"^3","Creates an empty compilation state Atom<Map>."],"~$empty-env",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",31,"^6",7,"^7",31,"^8",16,"^V",["^W",["^X",["^W",[[]]]]],"^3","Creates an empty analysis environment."],"^F","~$cljs.analyzer.api/empty-env","^4","cljs/analyzer/api.cljc","^8",16,"^13",["^W",[[]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",31,"^1E","^19","^7",31,"^12",0,"^1:",true,"^V",["^W",["^X",["^W",[[]]]]],"^3","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",48,"^6",7,"^7",48,"^8",30,"^V",["^W",["^X",["^W",[["^1C","^K","~$extra"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^F","~$cljs.analyzer.api/default-warning-handler","^4","cljs/analyzer/api.cljc","^8",30,"^13",["^W",[["^1C","^K","^1L"]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",48,"^1E",["^>",[null,"^1A"]],"^7",48,"^12",3,"^1:",true,"^V",["^W",["^X",["^W",[["^1C","^K","^1L"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^C",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",174,"^6",7,"^7",174,"^8",17,"^V",["^W",["^X",["^W",[["^1;"],["^Z","^1;"]]]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^[",["^ ","^10",false,"^11",2,"^12",2,"^13",["^W",[["^1;"],["^Z","^1;"]]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/ns-interns","^4","cljs/analyzer/api.cljc","^8",17,"^[",["^ ","^10",false,"^11",2,"^12",2,"^13",["^W",[["^1;"],["^Z","^1;"]]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]],"^13",["^W",[["^1;"],["^Z","^1;"]]],"^16",null,"^11",2,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",1,"^10",false,"^18","^19"],["^ ","^11",2,"^10",false,"^18",["^>",["^19","^1A"]]]],"^5",174,"^7",174,"^12",2,"^1:",true,"^V",["^W",[["^1;"],["^Z","^1;"]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^D",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",157,"^6",7,"^7",157,"^8",13,"^V",["^W",["^X",["^W",[[],["^Z"]]]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^[",["^ ","^10",false,"^11",1,"^12",1,"^13",["^W",[[],["^Z"]]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/all-ns","^4","cljs/analyzer/api.cljc","^8",13,"^[",["^ ","^10",false,"^11",1,"^12",1,"^13",["^W",[[],["^Z"]]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]],"^13",["^W",[[],["^Z"]]],"^16",null,"^11",1,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",0,"^10",false,"^18","^19"],["^ ","^11",1,"^10",false,"^18",["^>",["~$cljs.core/KeySeq","^1A"]]]],"^5",157,"^7",157,"^12",1,"^1:",true,"^V",["^W",[[],["^Z"]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"^E",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",145,"^6",7,"^7",145,"^8",14,"^V",["^W",["^X",["^W",[["^K","^Y"]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^F","~$cljs.analyzer.api/resolve","^4","cljs/analyzer/api.cljc","^8",14,"^13",["^W",[["^K","^Y"]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",145,"^7",145,"^12",2,"^1:",true,"^V",["^W",["^X",["^W",[["^K","^Y"]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",61,"^6",7,"^7",61,"^8",19,"^V",["^W",["^X",["^W",[[],["^Z"]]]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^[",["^ ","^10",false,"^11",1,"^12",1,"^13",["^W",[[],["^Z"]]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/get-js-index","^4","cljs/analyzer/api.cljc","^8",19,"^[",["^ ","^10",false,"^11",1,"^12",1,"^13",["^W",[[],["^Z"]]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]],"^13",["^W",[[],["^Z"]]],"^16",null,"^11",1,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",0,"^10",false,"^18",["^>",["^19","^1A"]]],["^ ","^11",1,"^10",false,"^18",["^>",["^19","^1A"]]]],"^5",61,"^7",61,"^12",1,"^1:",true,"^V",["^W",[[],["^Z"]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"~:require-macros",["^ ","^N","^N"],"~:cljs.analyzer/constants",["^ ","^P",["^>",["~:cljs.analyzer/namespaces","~:private","~:macros","~:js-dependency-index","^T","~:options"]],"~:order",["^1Z","^1Y","^1V","^1X","^T","^1W"]],"~:flags",["^ ","^Q",["^>",[]]],"~:js-deps",["^ "],"~:deps",["^O","^N","^J","^L"]]